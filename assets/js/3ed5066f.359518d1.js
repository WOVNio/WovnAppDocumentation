"use strict";(self.webpackChunkwovn_app_documentation=self.webpackChunkwovn_app_documentation||[]).push([[2244],{6582:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>e,toc:()=>c});const e=JSON.parse('{"id":"English/Android/translate_push_notification","title":"Wovn Push Notification Feature","description":"Note, this document is only applied to Firebase Could Messaging. If you use a different service to send push notifications, please get in touch with us.","source":"@site/docs/English/Android/translate_push_notification.md","sourceDirName":"English/Android","slug":"/English/Android/translate_push_notification","permalink":"/WovnAppDocumentation/docs/English/Android/translate_push_notification","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"englishDocsSidebar","previous":{"title":"WOVN Settings Screen in the App Info","permalink":"/WovnAppDocumentation/docs/English/Android/setup_wovn_settings_in_app_info"},"next":{"title":"Wovn SDK for Android - Public API Reference","permalink":"/WovnAppDocumentation/docs/English/Android/wovn_apis"}}');var o=i(4848),a=i(8453);const s={},r="Wovn Push Notification Feature",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Detail",id:"detail",level:2},{value:"1. How Wovn can translate your notification",id:"1-how-wovn-can-translate-your-notification",level:3},{value:"2. How to allow Wovn to access and then translate notification data from the server before showing it to the end user",id:"2-how-to-allow-wovn-to-access-and-then-translate-notification-data-from-the-server-before-showing-it-to-the-end-user",level:3},{value:"Testing the feature",id:"testing-the-feature",level:3},{value:"3. How to use Wovn to translate notification data containing sensitive user information",id:"3-how-to-use-wovn-to-translate-notification-data-containing-sensitive-user-information",level:2},{value:"4. How to use Wovn to translate local push notification",id:"4-how-to-use-wovn-to-translate-local-push-notification",level:2}];function d(n){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"wovn-push-notification-feature",children:"Wovn Push Notification Feature"})}),"\n",(0,o.jsx)(t.p,{children:"Note, this document is only applied to Firebase Could Messaging. If you use a different service to send push notifications, please get in touch with us."}),"\n",(0,o.jsxs)(t.p,{children:["This document assumes your application is already connected to the Firebase Cloud Messaging service for push notifications. If not, please follow the official ",(0,o.jsx)(t.a,{href:"https://firebase.google.com/docs/cloud-messaging/android/first-message",children:"Google document"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"In this document, you will learn:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"How Wovn can translate your notification"}),"\n",(0,o.jsx)(t.li,{children:"How to allow Wovn to access and then translate notification data from the server before showing it to the end user"}),"\n",(0,o.jsx)(t.li,{children:"How to use Wovn to translate notification data containing sensitive user information"}),"\n",(0,o.jsx)(t.li,{children:"How to use Wovn to translate local push notification"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"detail",children:"Detail"}),"\n",(0,o.jsx)(t.h3,{id:"1-how-wovn-can-translate-your-notification",children:"1. How Wovn can translate your notification"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Push Notification Overview",src:i(298).A+"",width:"2986",height:"1658"})}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"First, send a test push notification to your test device. This will allow Wovn to report the notification data to Wovn Dashboard and translate it."}),"\n",(0,o.jsx)(t.li,{children:"After Wovn Dashboard translated the notification data, send the same notification again to your test device to confirm."}),"\n",(0,o.jsx)(t.li,{children:"After confirming the notification has been translated, you can send it to all your users."}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"2-how-to-allow-wovn-to-access-and-then-translate-notification-data-from-the-server-before-showing-it-to-the-end-user",children:"2. How to allow Wovn to access and then translate notification data from the server before showing it to the end user"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["If you haven\u2019t extended ",(0,o.jsx)(t.code,{children:"FirebaseMessagingService"})," to add custom logic, please do so by following ",(0,o.jsx)(t.a,{href:"https://firebase.google.com/docs/cloud-messaging/android/receive",children:"this document"})]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Add the following code inside the ",(0,o.jsx)(t.code,{children:"FirebaseMessagingService"})," extended class. Please do not forget to import Wovn and other necessary dependencies."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'@Override\npublic void handleIntent(Intent intentSrc) {\n    Intent intentDst = Wovn.translateFirebaseNotificationIntent(intentSrc);\n    final String title = intentDst.getStringExtra("title") == null\n            ? intentDst.getStringExtra("gcm.notification.title")\n            : intentDst.getStringExtra("title");\n    final String body = intentDst.getStringExtra("body") == null\n            ? intentDst.getStringExtra("gcm.notification.body")\n            : intentDst.getStringExtra("body");\n    showNotification(title, body);\n}\n\npublic void showNotification(String title, String message) {\n    if( title != null || message != null ) {\n        Context context = getApplicationContext();\n        showNotification(context, title, message);\n    }\n}\n\npublic static void showNotification(Context context, String title, String message) {\n    final String CHANNEL_ID = "MyChannelId";\n    final int NOTIFICATION_ID = 1;\n    NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n\n    // Create a notification channel for Android Oreo and above\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n        NotificationChannel channel = new NotificationChannel(CHANNEL_ID, "Channel Name", NotificationManager.IMPORTANCE_DEFAULT);\n        notificationManager.createNotificationChannel(channel);\n    }\n\n    // Create the notification\n    NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)\n            .setSmallIcon(R.drawable.arrow_point_to_right)\n            .setContentTitle(title)\n            .setContentText(message)\n            .setAutoCancel(true);\n\n    // Show the notification\n    notificationManager.notify(NOTIFICATION_ID, builder.build());\n    // For Wovn only\n    lastNotiTitle = title;\n    lastNotiBody = message;\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"After step 2, your file should look like this:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'package io.wovn.app.demo.activities;\n\nimport android.app.NotificationChannel;\nimport android.app.NotificationManager;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Build;\n\nimport androidx.annotation.NonNull;\nimport androidx.core.app.NotificationCompat;\n\nimport com.google.firebase.messaging.FirebaseMessagingService;\nimport com.google.firebase.messaging.RemoteMessage;\n\nimport io.wovn.app.demo.R;\nimport io.wovn.wovnapp.Wovn;\n\npublic class WovnFirebaseMessagingService extends FirebaseMessagingService {\n    public static String lastNotiTitle = "";\n    public static String lastNotiBody = "";\n    @Override\n    public void onMessageReceived(@NonNull RemoteMessage remoteMessage) {\n        // This function will not be called since we overridden handleIntent\n    }\n\n    @Override\n    public void handleIntent(Intent intentSrc) {\n        Intent intentDst = Wovn.translateFirebaseNotificationIntent(intentSrc);\n        final String title = intentDst.getStringExtra("title") == null\n                ? intentDst.getStringExtra("gcm.notification.title")\n                : intentDst.getStringExtra("title");\n        final String body = intentDst.getStringExtra("body") == null\n                ? intentDst.getStringExtra("gcm.notification.body")\n                : intentDst.getStringExtra("body");\n        showNotification(title, body);\n    }\n\n    public void showNotification(String title, String message) {\n        if( title != null || message != null ) {\n            Context context = getApplicationContext();\n            showNotification(context, title, message);\n        }\n    }\n\n    public static void showNotification(Context context, String title, String message) {\n        final String CHANNEL_ID = "MyChannelId";\n        final int NOTIFICATION_ID = 1;\n        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n\n        // Create a notification channel for Android Oreo and above\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, "Channel Name", NotificationManager.IMPORTANCE_DEFAULT);\n            notificationManager.createNotificationChannel(channel);\n        }\n\n        // Create the notification\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)\n                .setSmallIcon(R.drawable.arrow_point_to_right)\n                .setContentTitle(title)\n                .setContentText(message)\n                .setAutoCancel(true);\n\n        // Show the notification\n        notificationManager.notify(NOTIFICATION_ID, builder.build());\n        // For Wovn only\n        lastNotiTitle = title;\n        lastNotiBody = message;\n    }\n\n    @Override\n    public void onDeletedMessages() { /*Do nothing*/ }\n\n    @Override\n    public void onNewToken(@NonNull String token) { /*Do nothing*/ }\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Correct small details like ",(0,o.jsx)(t.code,{children:"CHANNEL_ID"}),", or ",(0,o.jsx)(t.code,{children:"Notification icon"}),", and Wovn will translate all your notifications."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"testing-the-feature",children:"Testing the feature"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"We can send a push notification to the device via Firebase Cloud Messaging with the following data"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n    "to": "{YOUR TESTING DEVICE FCM TOKEN}",\n    "notification": {\n        "title": "\u3053\u3093\u306b\u3061\u306f",\n        "body": "\u7d20\u6674\u3089\u3057\u3044\u65e5\u3067\u3059\u306d\uff01"\n    }\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"For the first time, your test device should receive a notification in Japanese. This is because Wovn does not have the translation for it yet. If you have allowed Wovn to report data, you should be able to find the title and body of the notification inside PushNotification screen in Wovn Dashboard"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.img,{alt:"push_notification_android_before_translation",src:i(3350).A+"",width:"1080",height:"314"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.img,{alt:"push_notification_android_dashboard_after_first_push_notification",src:i(6712).A+"",width:"1380",height:"434"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["After translating the 2 values, then click ",(0,o.jsx)(t.code,{children:"Save and publish"}),", from the next time you send the same notification, it should be translated into the end-user language."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.img,{alt:"push_notification_android_demo",src:i(349).A+"",width:"996",height:"2160"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"3-how-to-use-wovn-to-translate-notification-data-containing-sensitive-user-information",children:"3. How to use Wovn to translate notification data containing sensitive user information"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Instead of adding user data directly into the ",(0,o.jsx)(t.code,{children:"title"})," or ",(0,o.jsx)(t.code,{children:"body"})," of the notification, you can use ",(0,o.jsx)(t.code,{children:"%{variable_name}%"})," instead, with its data inside data of the notification."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{   \n    "to": "{YOUR TESTING DEVICE FCM TOKEN}",\n    "notification": {\n        "title": "\u4eca\u6708\u306e\u8acb\u6c42\u66f8\u306e\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f, %name%\u3055\u3093!",\n        "body": "\u4eca\u6708\u306f%amount%\u5186\u3067\u3059\u3002 %date%\u307e\u3067\u306b\u304a\u652f\u6255\u3044\u304f\u3060\u3055\u3044"\n    },\n    "data": {\n        "name": "John Doe",\n        "amount": "10000",\n        "date": "2023/12/12"\n    }  \n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Follow the same process when testing normal push notifications, your notifications with user-sensitive data can be translated too, without leaking any information."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.img,{alt:"push_notification_android_dashboard_after_dynamic_push_notification",src:i(1297).A+"",width:"1399",height:"579"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.img,{alt:"push_notification_android_dynamic_pn_demo",src:i(9262).A+"",width:"996",height:"2160"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"4-how-to-use-wovn-to-translate-local-push-notification",children:"4. How to use Wovn to translate local push notification"}),"\n",(0,o.jsx)(t.p,{children:"You can use Wovn.translateNotificationData to translate local push notification data before displaying it."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'Map<String, Object> data = new HashMap<>();\ndata.put("name", "John Doe");\ndata.put("amount", 2468);\ndata.put("duration", 31);\nString title = Wovn.translateNotificationData("\u3053\u3093\u306b\u3061\u306f%name%\u3055\u3093\u3002%amount%\u5186\u306e\u8acb\u6c42\u66f8\u304c\u3042\u308a\u307e\u3059", data);\nString body = Wovn.translateNotificationData("%amount%\u5186\u3092%duration%\u65e5\u4ee5\u5185\u306b\u304a\u652f\u6255\u3044\u304f\u3060\u3055\u3044", data);\n// Display local push notification code\n'})})]})}function h(n={}){const{wrapper:t}={...(0,a.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},3350:(n,t,i)=>{i.d(t,{A:()=>e});const e=i.p+"assets/images/push_notification_android_before_translation-097bb34e0c6869b9eb1b893e40670530.png"},1297:(n,t,i)=>{i.d(t,{A:()=>e});const e=i.p+"assets/images/push_notification_android_dashboard_after_dynamic_push_notification-1bb5cd371d43f4f83182bb37ff1d8959.png"},6712:(n,t,i)=>{i.d(t,{A:()=>e});const e=i.p+"assets/images/push_notification_android_dashboard_after_first_push_notification-ab45b960bb2906b112731ba043d7a4bb.png"},349:(n,t,i)=>{i.d(t,{A:()=>e});const e=i.p+"assets/images/push_notification_android_demo-d372edd2818eb7474a2315ec27559f2c.gif"},9262:(n,t,i)=>{i.d(t,{A:()=>e});const e=i.p+"assets/images/push_notification_android_dynamic_pn_demo-05dffdd03fdec2dc2b9f7d3e0a3d96dd.gif"},298:(n,t,i)=>{i.d(t,{A:()=>e});const e=i.p+"assets/images/push_notification_overview-791b992efe5b9974e5806f4ad9f8509c.png"},8453:(n,t,i)=>{i.d(t,{R:()=>s,x:()=>r});var e=i(6540);const o={},a=e.createContext(o);function s(n){const t=e.useContext(a);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function r(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),e.createElement(a.Provider,{value:t},n.children)}}}]);