"use strict";(self.webpackChunkwovn_app_documentation=self.webpackChunkwovn_app_documentation||[]).push([[3478],{5482:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"English/ReactNative/wovn_ignore_component","title":"WovnIgnore Component Documentation for React Native","description":"The WovnIgnore component is a utility designed to exclude specific sections of your application from WOVN\'s translation or reporting functionalities. By using React\'s Context API, this component dynamically provides the isIgnore state to child components, ensuring that marked content is ignored by WOVN\'s services.","source":"@site/docs/English/ReactNative/wovn_ignore_component.md","sourceDirName":"English/ReactNative","slug":"/English/ReactNative/wovn_ignore_component","permalink":"/WovnAppDocumentation/docs/English/ReactNative/wovn_ignore_component","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"englishDocsSidebar","previous":{"title":"Wovn SDK Documentation","permalink":"/WovnAppDocumentation/docs/English/ReactNative/wovn_apis"},"next":{"title":"wovn_sdk CLI Documentation","permalink":"/WovnAppDocumentation/docs/English/WOVN CLI/overview"}}');var i=o(4848),r=o(8453);const s={},c="WovnIgnore Component Documentation for React Native",d={},a=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Notes",id:"notes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"wovnignore-component-documentation-for-react-native",children:[(0,i.jsx)(n.code,{children:"WovnIgnore"})," Component Documentation for React Native"]})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"WovnIgnore"})," component is a utility designed to exclude specific sections of your application from WOVN's translation or reporting functionalities. By using React's ",(0,i.jsx)(n.code,{children:"Context"})," API, this component dynamically provides the ",(0,i.jsx)(n.code,{children:"isIgnore"})," state to child components, ensuring that marked content is ignored by WOVN's services."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"WovnIgnore"})," component wraps the parts of your application that should be excluded from WOVN's translation or reporting. The ",(0,i.jsx)(n.code,{children:"ignore"})," prop allows you to specify whether the child content should be ignored."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import React from 'react';\nimport { Text } from 'react-native';\nimport { WovnIgnore } from '@wovnio/react-native';\n\n<WovnIgnore>\n  {/** Content within this component will be ignored by WOVN */}\n  <Text>This content will not be translated or reported.</Text>\n</WovnIgnore>\n\n{/** Content outside WovnIgnore will be processed by WOVN */}\n<Text>This content will be translated and reported.</Text>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["More complicated usage of ",(0,i.jsx)(n.code,{children:"WovnIgnore"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'<Screen name="ScreenName">\n    <WovnIgnore>\n        <Text>This content is ignored and will NOT be translated or reported.</Text>\n        <WovnIgnore ignore={false}>\n            <Text>This content is NOT ignored and will be translated and reported.</Text>\n        </WovnIgnore>\n    </WovnIgnore>\n    <WovnIgnore ignore={true}>\n        <Text>This content is also ignored and will NOT be translated or reported.</Text>\n    </WovnIgnore>\n</Screen>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ignore"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Specifies whether the child content should be ignored."})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Nested Components"}),": The ",(0,i.jsx)(n.code,{children:"isIgnore"})," state is inherited by child components within the ",(0,i.jsx)(n.code,{children:"WovnIgnore"})," wrapper. Nested content inside a ",(0,i.jsx)(n.code,{children:"WovnIgnore"})," component will respect the ",(0,i.jsx)(n.code,{children:"ignore"})," state."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"<WovnIgnore>\n    <Text>Ignored content.</Text>\n    <View>\n        <Text>Nested ignored content.</Text>\n    </View>\n</WovnIgnore>\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default Behavior"}),": If the ",(0,i.jsx)(n.code,{children:"ignore"})," prop is not provided, the component defaults to ",(0,i.jsx)(n.code,{children:"true"}),", meaning its content will be ignored."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var t=o(6540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);