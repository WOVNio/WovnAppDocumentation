"use strict";(self.webpackChunkwovn_app_documentation=self.webpackChunkwovn_app_documentation||[]).push([[6327],{6959:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"English/ReactNative/wovn_apis","title":"Wovn SDK Documentation","description":"Initialization","source":"@site/docs/English/ReactNative/wovn_apis.md","sourceDirName":"English/ReactNative","slug":"/English/ReactNative/wovn_apis","permalink":"/WovnAppDocumentation/docs/English/ReactNative/wovn_apis","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"englishDocsSidebar","previous":{"title":"using_wovn_react_native_sdk","permalink":"/WovnAppDocumentation/docs/English/ReactNative/using_wovn_react_native_sdk"},"next":{"title":"WovnIgnore Component Documentation for React Native","permalink":"/WovnAppDocumentation/docs/English/ReactNative/wovn_ignore_component"}}');var i=s(4848),r=s(8453);const l={},c="Wovn SDK Documentation",a={},o=[{value:"Initialization",id:"initialization",level:2},{value:"<code>initWovn</code>",id:"initwovn",level:3},{value:"Language Management",id:"language-management",level:2},{value:"<code>changeLang</code>",id:"changelang",level:3},{value:"<code>changeToSystemLang</code>",id:"changetosystemlang",level:3},{value:"<code>getLanguagesList</code>",id:"getlanguageslist",level:3},{value:"<code>getCurrentLang</code>",id:"getcurrentlang",level:3},{value:"<code>getSystemLang</code>",id:"getsystemlang",level:3},{value:"Translation",id:"translation",level:2},{value:"<code>useTranslate</code>",id:"usetranslate",level:3},{value:"<code>translateText</code>",id:"translatetext",level:3},{value:"<code>translate</code>",id:"translate",level:3},{value:"Utility Functions",id:"utility-functions",level:2},{value:"<code>getToken</code>",id:"gettoken",level:3},{value:"<code>getWovnStatus</code>",id:"getwovnstatus",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"wovn-sdk-documentation",children:"Wovn SDK Documentation"})}),"\n",(0,i.jsx)(n.h2,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(n.h3,{id:"initwovn",children:(0,i.jsx)(n.code,{children:"initWovn"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Initializes the Wovn SDK with the provided token and configuration options. This setup is essential before invoking any other Wovn SDK methods. The initialization process involves fetching necessary data from the API or local storage, ensuring that the SDK is ready for use."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"initWovn(token: string, opts?: WovnInitOptions): Promise<void>\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"token"})," (",(0,i.jsx)(n.code,{children:"string"}),"): The authentication token required for loading data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"opts"})," (",(0,i.jsx)(n.code,{children:"WovnInitOptions"}),", optional): Configuration options for initialization.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabledDebugLog"})," (",(0,i.jsx)(n.code,{children:"boolean"}),"): Enables debug logging."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"logLevel"})," (",(0,i.jsx)(n.code,{children:"number | LogLevel"}),"): The log level to use for logging.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"})," = VERBOSE"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"})," = DEBUG"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"})," = INFO"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"})," = WARN"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"})," = ERROR"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"5"})," = NONE"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enableTranslationPreviewMode"})," (",(0,i.jsx)(n.code,{children:"boolean"}),"): Enables translation preview mode when app operator mode is active."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"debugMode"})," (",(0,i.jsx)(n.code,{children:"boolean"}),"): Enables debug mode, which also activates app operator mode. Debug mode is enabled by default in the development environment (",(0,i.jsx)(n.code,{children:"__DEV__ === true"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Promise<void>"}),": A promise that resolves once initialization is complete."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Remarks"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This method should be called before invoking any other Wovn SDK methods; using ",(0,i.jsx)(n.code,{children:"await"})," is recommended."]}),"\n",(0,i.jsx)(n.li,{children:"The first invocation fetches data from the API, which may take time. Subsequent calls load data from local storage, ensuring near-instant initialization."}),"\n",(0,i.jsx)(n.li,{children:"To speed up the initial load, a kickstart feature will be added in future releases."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Basic usage:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"await initWovn('your-token')\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"React Native integration:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import React, { useState, useEffect } from 'react';\nimport 'expo-router/entry';\nimport { registerRootComponent } from 'expo';\nimport { ExpoRoot } from 'expo-router';\nimport * as Wovn from '@wovnio/react-native';\nimport { Text, ActivityIndicator, View, StyleSheet } from 'react-native';\n\nasync function initializeApp() {\n  try {\n    await Wovn.initWovn('TOKEN3', {\n      enabledDebugLog: true,\n      logLevel: 0,\n    });\n  } catch (error) {\n    console.error('Initialization failed:', error);\n  }\n}\n\nfunction App() {\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      await initializeApp();\n      setIsInitialized(true);\n    }\n    init();\n  }, []);\n\n  // Ensure the app is not rendered until WOVN initialization is complete\n  if (!isInitialized) {\n    return (\n      <View style={styles.centeredView}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n        <Text>LOADING...</Text>\n      </View>\n    );\n  }\n\n  return <ExpoRoot context={require.context('./app')} />;\n}\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nregisterRootComponent(App);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"language-management",children:"Language Management"}),"\n",(0,i.jsx)(n.h3,{id:"changelang",children:(0,i.jsx)(n.code,{children:"changeLang"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Changes the current language to the specified language code."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"changeLang(langCode: string): void\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"langCode"})," (",(0,i.jsx)(n.code,{children:"string"}),"): The language code to switch to (e.g., ",(0,i.jsx)(n.code,{children:"'en'"}),", ",(0,i.jsx)(n.code,{children:"'fr'"}),", ",(0,i.jsx)(n.code,{children:"'es'"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"changeLang('fr');\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"changetosystemlang",children:(0,i.jsx)(n.code,{children:"changeToSystemLang"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Changes the current language to the system's default language."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"changeToSystemLang(): void\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"changeToSystemLang();\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getlanguageslist",children:(0,i.jsx)(n.code,{children:"getLanguagesList"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the list of supported language codes."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"getLanguagesList(): string[]\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string[]"}),": An array of supported language codes."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const languages = getLanguagesList();\nconsole.log(languages); // ['en', 'fr', 'es', ...]\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcurrentlang",children:(0,i.jsx)(n.code,{children:"getCurrentLang"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Gets the currently active language code."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"getCurrentLang(): string\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),": The current language code (e.g., ",(0,i.jsx)(n.code,{children:"'en'"}),", ",(0,i.jsx)(n.code,{children:"'fr'"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const currentLang = getCurrentLang();\nconsole.log(currentLang); // 'en'\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getsystemlang",children:(0,i.jsx)(n.code,{children:"getSystemLang"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the system's default language code."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"getSystemLang(): string\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),": The system language code (e.g., ",(0,i.jsx)(n.code,{children:"'en-US'"}),", ",(0,i.jsx)(n.code,{children:"'fr-FR'"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const systemLang = getSystemLang();\nconsole.log(systemLang); // 'en-US'\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"translation",children:"Translation"}),"\n",(0,i.jsx)(n.h3,{id:"usetranslate",children:(0,i.jsx)(n.code,{children:"useTranslate"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"A React hook that provides a translation function based on the current language settings. It automatically determines the screen name from the context and updates the translation whenever the language changes."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"useTranslate(srcNode: React.ReactNode): React.ReactNode\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"srcNode"})," (",(0,i.jsx)(n.code,{children:"React.ReactNode"}),"): The React node to be translated."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"React.ReactNode"}),": The translated React node. If a translation is not available, it returns the original node."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import {\n  Text as RNText,\n  Button as RNButton,\n} from 'react-native';\nimport * as Wovn from '@wovnio/react-native';\nimport { Screen } from '@wovnio/react-native';\n\n// Example usage\n<Screen name=\"TextScreenReactNative\">\n  <RNText>\n    {Wovn.useTranslate('\u3053\u3093\u306b\u3061\u306f\u3001\u4e16\u754c')}\n  </RNText>\n\n  <RNButton title={Wovn.useTranslate('\u3053\u3093\u306b\u3061\u306f\u3001\u4e16\u754c!') as string}/>\n</Screen>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"translatetext",children:(0,i.jsx)(n.code,{children:"translateText"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Translates a given text based on the current language settings."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"translateText(text: string, screenName?: string): string\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"})," (",(0,i.jsx)(n.code,{children:"string"}),"): The text to be translated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screenName"})," (",(0,i.jsx)(n.code,{children:"string"}),", optional): The identifier for the screen or context where the translation is applied. Defaults to ",(0,i.jsx)(n.code,{children:"'_Default'"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),": The translated text. If translation is not available, returns the original text."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const translated = translateText('Hello, world!');\nconsole.log(translated); // 'Bonjour le monde!' if the current language is French\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"translate",children:(0,i.jsx)(n.code,{children:"translate"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Translates a React node based on the current language settings."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"translate(node: React.ReactNode, screenName?: string): React.ReactNode\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"node"})," (",(0,i.jsx)(n.code,{children:"React.ReactNode"}),"): The React node to be translated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screenName"})," (",(0,i.jsx)(n.code,{children:"string"}),", optional): The identifier for the screen or context where the translation is applied. Defaults to ",(0,i.jsx)(n.code,{children:"'_Default'"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"React.ReactNode"}),": The translated React node. If translation is not available, returns the original node."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const translatedNode = translate(<div>Hello, world!</div>, 'HomeScreen');\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"utility-functions",children:"Utility Functions"}),"\n",(0,i.jsx)(n.h3,{id:"gettoken",children:(0,i.jsx)(n.code,{children:"getToken"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the current project token used by the Wovn SDK."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"getToken(): string\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),": The current Wovn project token."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const token = getToken();\nconsole.log(token); // 'FToken'\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getwovnstatus",children:(0,i.jsx)(n.code,{children:"getWovnStatus"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the current status of the Wovn SDK."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"getWovnStatus(): string\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),": A string representation of the Wovn SDK's current status."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const status = getWovnStatus();\nconsole.log(status); // 'Configs[token: TOKEN3]'\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);